//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//
//     Zmiany w tym pliku mogą spowodować niewłaściwe zachowanie i zostaną utracone
//     w przypadku ponownego wygenerowania kodu.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Threading.Tasks;

namespace DomainOptions
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.example.org/SOAPPROJ/", ConfigurationName="DomainOptions.SOAPPROJ")]
    public interface SOAPPROJ
    {
        
        // CODEGEN: Trwa generowanie kontraktu komunikatu, ponieważ operacja ma wiele wartości zwracanych.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.example.org/SOAPPROJ/SOAPPROJ/NewDomainRequest", ReplyAction="http://www.example.org/SOAPPROJ/SOAPPROJ/NewDomainResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<DomainOptions.NewDomainResponse> NewDomainAsync(DomainOptions.ListDomainResponse request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.example.org/SOAPPROJ/SOAPPROJ/ListDomainRequest", ReplyAction="http://www.example.org/SOAPPROJ/SOAPPROJ/ListDomainResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<DomainOptions.ListDomainResponse> ListDomainAsync(DomainOptions.ListDomainResponse request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NewDomainUser", WrapperNamespace="http://www.example.org/SOAPPROJ/", IsWrapped=true)]
    public partial class ListDomainResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Domainname;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string UserID;
        
        public ListDomainResponse()
        {
        }
        
        public ListDomainResponse(string Domainname, string UserID)
        {
            this.Domainname = Domainname;
            this.UserID = UserID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="NewDomainUserResponse", WrapperNamespace="http://www.example.org/SOAPPROJ/", IsWrapped=true)]
    public partial class NewDomainResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Status;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string errorcode;
        
        public NewDomainResponse()
        {
        }
        
        public NewDomainResponse(string Status, string errorcode)
        {
            this.Status = Status;
            this.errorcode = errorcode;
        }
    }
    
   // [System.Diagnostics.DebuggerStepThroughAttribute()]
   // [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
   // [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
  //  [System.ServiceModel.MessageContractAttribute(WrapperName="GetDomainList", WrapperNamespace="http://www.example.org/SOAPPROJ/", IsWrapped=true)]
  //  public partial class ListDomainResponse
  //  {
   //     internal static readonly string EndpointConfiguration;
  //      [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=0)]
  //      [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
      //  public string UserID;
        
      //  public ListDomainResponse()
   //     {
  //      }
        
   //     public ListDomainResponse(string UserID)
  //      {
  //          this.UserID = UserID;
  //      }

   //     internal Task AddDomain(string v)
    //    {
    //        throw new NotImplementedException();
//}
//
 //       internal Task AddDomain()
//        {
//            throw new NotImplementedException();
 //       }

 //       internal Task AddDomainAsync(string num)
//        {
 //           throw new NotImplementedException();
//        }
//    }
//    
//    [System.Diagnostics.DebuggerStepThroughAttribute()]
//    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
//    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
//    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDomainListResponse", WrapperNamespace="http://www.example.org/SOAPPROJ/", IsWrapped=true)]
    public partial class ListDomainResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.example.org/SOAPPROJ/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("DomainsLIst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] DomainsLIst;
        
        public ListDomainResponse(object UserID)
        {
        }
        
        public ListDomainResponse(string[] DomainsLIst)
        {
            this.DomainsLIst = DomainsLIst;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface SOAPPROJChannel : DomainOptions.SOAPPROJ, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class SOAPPROJClient : System.ServiceModel.ClientBase<DomainOptions.SOAPPROJ>, DomainOptions.SOAPPROJ
    {
        
        public SOAPPROJClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<DomainOptions.NewDomainResponse> NewDomainAsync(DomainOptions.ListDomainResponse request)
        {
            return base.Channel.NewDomainAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<DomainOptions.ListDomainResponse> DomainOptions.SOAPPROJ.ListDomainAsync(DomainOptions.ListDomainResponse request)
        {
            return base.Channel.ListDomainAsync(request);
        }
        
        public System.Threading.Tasks.Task<DomainOptions.ListDomainResponse> ListDomainAsync(string UserID)
        {
            DomainOptions.ListDomainResponse inValue = new DomainOptions.ListDomainResponse();
            inValue.UserID = UserID;
            return ((DomainOptions.SOAPPROJ)(this)).ListDomainAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
}
